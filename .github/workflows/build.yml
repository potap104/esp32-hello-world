name: Build & Deploy to GitHub Pages

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build firmware
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/project \
          -w /project \
          espressif/idf idf.py set-target esp32c3
        docker run --rm \
          -v ${{ github.workspace }}:/project \
          -w /project \
          espressif/idf idf.py build

    - name: Prepare firmware output for Pages
      run: |
        mkdir -p pages/firmware
        cp build/*.bin build/*.elf build/flasher_args.json pages/firmware/ || true

        echo '<h1>Firmware</h1><ul>' > pages/index.html
        for f in pages/firmware/*; do
        echo "<li><a href=\"${f#pages/}\">$(basename $f)</a></li>" >> pages/index.html
        done
        echo '</ul>' >> pages/index.html

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—à–∏–≤–∫–∏
        cat <<EOF >> pages/index.html
        <h2>–ü—Ä–æ—à–∏—Ç—å ESP32 –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞</h2>
        <button onclick="installFirmware()">üîå –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∏ –ø—Ä–æ—à–∏—Ç—å</button>
        <script type="module">
          import { flash } from 'https://unpkg.com/esptool-js@0.9.1/dist/web/index.min.js';

          async function installFirmware() {
            try {
              const port = await navigator.serial.requestPort();
              await port.open({ baudRate: 115200 });

              const file = await fetch("firmware/firmware.bin").then(r => r.arrayBuffer());

              await flash(port, [
                {
                  offset: 0x1000,
                  data: new Uint8Array(file)
                }
              ]);
              alert("‚úÖ –ü—Ä–æ—à–∏–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
            } catch (e) {
              alert("‚ùå –û—à–∏–±–∫–∞: " + e.message);
              console.error(e);
            }
          }
        </script>
        EOF
        ls -R pages

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./pages
